import { IResponse, IContext } from '../../../types';
import { IAction } from '../../action';
export interface IDoActionByDropletTagApiResponse {
    actions: IAction[];
}
export declare type ActionType = "power_cycle" | "power_on" | "power_off" | "shutdown" | "enable_ipv6" | "enable_backups" | "disable_backups" | "snapshot";
export interface IDoActionByDropletTagApiRequest {
    tag_name: string;
    type: ActionType | string;
}
export declare type DoActionByDropletTagResponse = IResponse<IDoActionByDropletTagApiResponse>;
export declare const doActionByDropletTag: ({ httpClient, }: IContext) => ({ tag_name, type, }: IDoActionByDropletTagApiRequest) => Promise<Readonly<DoActionByDropletTagResponse>>;
