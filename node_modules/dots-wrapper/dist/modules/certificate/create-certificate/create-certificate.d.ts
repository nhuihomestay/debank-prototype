import { IResponse, IContext } from '../../../types';
import { ICertificate } from '..';
export interface ICreateCertificateApiResponse {
    certificate: ICertificate;
}
export interface ICreateCertificateApiRequest {
    certificate_chain?: string;
    dns_names?: string[];
    leaf_certificate?: string;
    name: string;
    private_key?: string;
    type: string | 'custom' | 'lets_encrypt';
}
export declare type CreateCertificateResponse = IResponse<ICreateCertificateApiResponse>;
export declare const createCertificate: ({ httpClient, }: IContext) => ({ certificate_chain, dns_names, leaf_certificate, name, private_key, type, }: ICreateCertificateApiRequest) => Promise<Readonly<CreateCertificateResponse>>;
